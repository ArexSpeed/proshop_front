[{"/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/index.js":"1","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/App.js":"2","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/reportWebVitals.js":"3","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/store.js":"4","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/screens/HomeScreen.js":"5","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/screens/ProductScreen.js":"6","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/components/Header.js":"7","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/components/Footer.js":"8","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/components/Rating.js":"9","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/components/Product.js":"10","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/reducers/productReducers.js":"11","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/actions/productActions.js":"12","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/constants/productConstants.js":"13","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/components/Loader.js":"14","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/components/Message.js":"15","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/screens/CartScreen.js":"16","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/reducers/cartReducers.js":"17","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/constants/cartConstants.js":"18","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/actions/cartActions.js":"19","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/reducers/userReducers.js":"20","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/screens/LoginScreen.js":"21","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/constants/userConstants.js":"22","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/components/FormContainer.js":"23","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/actions/userActions.js":"24","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/screens/RegisterScreen.js":"25","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/screens/ProfileScreen.js":"26","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/screens/ShippingScreen.js":"27","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/components/CheckoutSteps.js":"28","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/screens/PaymentScreen.js":"29","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/screens/PlaceOrderScreen.js":"30","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/reducers/orderReducers.js":"31","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/actions/orderActions.js":"32","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/constants/orderConstants.js":"33","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/screens/OrderScreen.js":"34","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/screens/UserListScreen.js":"35","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/screens/UserEditScreen.js":"36"},{"size":592,"mtime":1610093412756,"results":"37","hashOfConfig":"38"},{"size":1887,"mtime":1610791652663,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":1610090810353,"results":"40","hashOfConfig":"38"},{"size":1773,"mtime":1610789551302,"results":"41","hashOfConfig":"38"},{"size":965,"mtime":1610109153394,"results":"42","hashOfConfig":"38"},{"size":3806,"mtime":1610112654042,"results":"43","hashOfConfig":"38"},{"size":2408,"mtime":1610783525273,"results":"44","hashOfConfig":"38"},{"size":311,"mtime":1610091270882,"results":"45","hashOfConfig":"38"},{"size":1584,"mtime":1610091359994,"results":"46","hashOfConfig":"38"},{"size":760,"mtime":1610091347531,"results":"47","hashOfConfig":"38"},{"size":980,"mtime":1610109492556,"results":"48","hashOfConfig":"38"},{"size":1150,"mtime":1610110284064,"results":"49","hashOfConfig":"38"},{"size":360,"mtime":1610109206672,"results":"50","hashOfConfig":"38"},{"size":383,"mtime":1610111792662,"results":"51","hashOfConfig":"38"},{"size":237,"mtime":1610109053808,"results":"52","hashOfConfig":"38"},{"size":3504,"mtime":1610113339092,"results":"53","hashOfConfig":"38"},{"size":1146,"mtime":1610566221137,"results":"54","hashOfConfig":"38"},{"size":233,"mtime":1610566051839,"results":"55","hashOfConfig":"38"},{"size":1188,"mtime":1610566157366,"results":"56","hashOfConfig":"38"},{"size":2849,"mtime":1610789066038,"results":"57","hashOfConfig":"38"},{"size":2067,"mtime":1610362538531,"results":"58","hashOfConfig":"38"},{"size":1256,"mtime":1610788815927,"results":"59","hashOfConfig":"38"},{"size":330,"mtime":1610361214085,"results":"60","hashOfConfig":"38"},{"size":4855,"mtime":1610791326244,"results":"61","hashOfConfig":"38"},{"size":3118,"mtime":1610363184518,"results":"62","hashOfConfig":"38"},{"size":5345,"mtime":1610730107970,"results":"63","hashOfConfig":"38"},{"size":2483,"mtime":1610566920867,"results":"64","hashOfConfig":"38"},{"size":1133,"mtime":1610568311271,"results":"65","hashOfConfig":"38"},{"size":1751,"mtime":1610567127189,"results":"66","hashOfConfig":"38"},{"size":4964,"mtime":1610638634084,"results":"67","hashOfConfig":"38"},{"size":2211,"mtime":1610730997662,"results":"68","hashOfConfig":"38"},{"size":3079,"mtime":1610730930257,"results":"69","hashOfConfig":"38"},{"size":786,"mtime":1610730790035,"results":"70","hashOfConfig":"38"},{"size":6223,"mtime":1610723941302,"results":"71","hashOfConfig":"38"},{"size":2576,"mtime":1610791863517,"results":"72","hashOfConfig":"38"},{"size":2433,"mtime":1610791604770,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"2vq679",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/index.js",[],["154","155"],"/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/App.js",[],"/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/reportWebVitals.js",[],"/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/store.js",[],"/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/screens/HomeScreen.js",["156"],"import React, {useState, useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport {listProducts} from '../actions/productActions'\n\nconst HomeScreen = () => {\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const {loading, error, products} = productList\n\n  useEffect(() => {\n    dispatch(listProducts())\n  }, [dispatch])\n\n\n  return ( \n    <>\n    <h1>Latest Products</h1>\n      {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\n        <Row>\n          {products.map(product => (\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n              <Product product={product} />\n            </Col>\n          ))}\n        </Row>\n      )}\n    </>\n  )\n}\n\nexport default HomeScreen","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/screens/ProductScreen.js",["157","158"],"import React, {useState, useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\n\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport axios from 'axios'\nimport {listProductDetails} from '../actions/productActions'\n\nconst ProductScreen = ({history,match}) => {\n  const [qty, setQty] = useState(1)\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector(state => state.productDetails)\n  const {loading, error, product} = productDetails;\n\n  useEffect(() => {\n    dispatch(listProductDetails(match.params.id))\n  }, [dispatch, match])\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\n  }\nconsole.log('history', history)\n  //console.log(match);\n  //const product = products.find(product => product._id === match.params.id)\n  return (\n  <>\n       <>\n      <Link className='btn btn-light my-3' to='/'>\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Row>\n          <Col md={6}>\n            <Image src={product.image} alt={product.name} fluid />\n          </Col>\n          <Col md={3}>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h3>{product.name}</h3>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Rating\n                  value={product.rating}\n                  text={`${product.numReviews} reviews`}\n                />\n              </ListGroup.Item>\n              <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n              <ListGroup.Item>\n                Description: {product.description}\n              </ListGroup.Item>\n            </ListGroup>\n          </Col>\n          <Col md={3}>\n            <Card>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Price:</Col>\n                    <Col>\n                      <strong>${product.price}</strong>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Status:</Col>\n                    <Col>\n                      {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n                {product.countInStock > 0 && (\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Qty</Col>\n                      <Col>\n                        <select\n                          value={qty}\n                          onChange={(e) => setQty(e.target.value)}\n                        >\n                          {[...Array(product.countInStock).keys()].map((x) => (\n                            <option key={x + 1} value={x + 1}>\n                              {x + 1}\n                            </option>\n                          ))}\n                        </select>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                )}\n                <ListGroup.Item>\n                  <Button\n                    onClick={addToCartHandler}\n                    className='btn-block'\n                    type='button'\n                    disabled={product.countInStock === 0}\n                  >\n                    Add To Cart\n                  </Button>\n                </ListGroup.Item>\n              </ListGroup>\n            </Card>\n          </Col>\n        </Row>\n      )}\n    </>\n    </>\n  )\n}\n\nexport default ProductScreen","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/components/Header.js",[],"/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/components/Footer.js",[],"/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/components/Rating.js",[],"/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/components/Product.js",["159","160"],"import React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\n\nconst Product = ({product}) => {\n\n  return (\n    <Card className='my-3 p-3 rounded'>\n    <Link to={`/product/${product._id}`}>\n      <Card.Img src={product.image} variant='top' />\n    </Link>\n\n    <Card.Body>\n      <Link to={`/product/${product._id}`}>\n        <Card.Title as='div'>\n          <strong>{product.name}</strong>\n        </Card.Title>\n      </Link>\n\n      <Card.Text as='div'>\n        <Rating value={product.rating}  text={`${product.numReviews} reviews`} />\n      </Card.Text>\n\n      <Card.Text as='h3'>${product.price}</Card.Text>\n    </Card.Body>\n  </Card>\n  )\n}\n\nexport default Product","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/reducers/productReducers.js",[],"/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/actions/productActions.js",[],"/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/constants/productConstants.js",[],"/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/components/Loader.js",[],"/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/components/Message.js",[],"/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/screens/CartScreen.js",[],"/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/reducers/cartReducers.js",[],"/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/constants/cartConstants.js",[],"/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/actions/cartActions.js",[],"/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/reducers/userReducers.js",[],"/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/screens/LoginScreen.js",[],"/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/constants/userConstants.js",[],"/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/components/FormContainer.js",[],"/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/actions/userActions.js",[],"/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/screens/RegisterScreen.js",[],"/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/screens/ProfileScreen.js",["161"],"import React, { useState, useEffect } from 'react'\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport {Link} from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { listMyOrders } from '../actions/orderActions'\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n  const { success } = userUpdateProfile\n\n  const orderListMy = useSelector((state) => state.orderListMy)\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails('profile'))\n        dispatch(listMyOrders())\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n      }\n    }\n  }, [dispatch, history, userInfo, user])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\n    }\n  }\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {message && <Message variant='danger'>{message}</Message>}\n        {error && <Message variant='danger'>{error}</Message>}\n        {success && <Message variant='success'>Profile Updated</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId='name'>\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type='name'\n              placeholder='Enter name'\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='email'>\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              type='email'\n              placeholder='Enter email'\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='password'>\n            <Form.Label>Password Address</Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Enter password'\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='confirmPassword'>\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Confirm password'\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type='submit' variant='primary'>\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h2>My Orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant='danger'>{errorOrders}</Message>\n        ) : (\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <Link to={`/order/${order._id}`}>\n                      <Button className='btn-sm' variant='light'>\n                        Details\n                      </Button>\n                    </Link>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProfileScreen","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/screens/ShippingScreen.js",[],"/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/components/CheckoutSteps.js",["162"],"import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport {Link} from 'react-router-dom';\n\nconst CheckoutSteps = ({step1, step2, step3, step4}) => {\n  return (\n    <Nav className='justify-content-center mb-4'>\n    <Nav.Item>\n      {step1 ? (\n        <Link to='/login'>\n          <Nav.Link>Sign In</Nav.Link>\n        </Link>\n      ) : (\n        <Nav.Link disabled>Sign In</Nav.Link>\n      )}\n    </Nav.Item>\n\n    <Nav.Item>\n      {step2 ? (\n        <Link to='/shipping'>\n          <Nav.Link>Shipping</Nav.Link>\n        </Link>\n      ) : (\n        <Nav.Link disabled>Shipping</Nav.Link>\n      )}\n    </Nav.Item>\n\n    <Nav.Item>\n      {step3 ? (\n        <Link to='/payment'>\n          <Nav.Link>Payment</Nav.Link>\n        </Link>\n      ) : (\n        <Nav.Link disabled>Payment</Nav.Link>\n      )}\n    </Nav.Item>\n\n    <Nav.Item>\n      {step4 ? (\n        <Link to='/placeorder'>\n          <Nav.Link>Place Order</Nav.Link>\n        </Link>\n      ) : (\n        <Nav.Link disabled>Place Order</Nav.Link>\n      )}\n    </Nav.Item>\n  </Nav>\n  )\n}\n\nexport default CheckoutSteps","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/screens/PaymentScreen.js",[],"/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/screens/PlaceOrderScreen.js",["163","164"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\n\nconst PlaceOrderScreen = ({history}) => {\n  const dispatch = useDispatch()\n  const cart = useSelector((state) => state.cart)\n\n  //   Calculate prices\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2)\n  }\n\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  )\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2)\n\n  const orderCreate = useSelector(state => state.orderCreate)\n  const {order, success, error} = orderCreate;\n\n  useEffect(() => {\n    if(success) history.push(`/order/${order._id}`)\n  }, [history, success])\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    )\n  }\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Address:</strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\n                {cart.shippingAddress.postalCode},{' '}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <strong>Method: </strong>\n              {cart.paymentMethod}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your cart is empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                {error && <Message variant='danger'>{error}</Message>}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type='button'\n                  className='btn-block'\n                  disabled={cart.cartItems === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default PlaceOrderScreen","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/reducers/orderReducers.js",[],"/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/actions/orderActions.js",[],"/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/constants/orderConstants.js",[],"/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/screens/OrderScreen.js",["165"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport {PayPalButton} from 'react-paypal-button-v2'\nimport { Link } from 'react-router-dom'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder } from '../actions/orderActions'\nimport {ORDER_PAY_RESET} from '../constants/orderConstants'\n\nconst OrderScreen = ({match}) => {\n  const orderId = match.params.id\n\n  const [sdkReady, setSdkReady] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const orderDetails = useSelector(state => state.orderDetails)\n  const {order, loading, error} = orderDetails\n\n  const orderPay = useSelector(state => state.orderPay)\n  const {loading: loadingPay, success:successPay} = orderPay\n\n  if (!loading) {\n    //   Calculate prices\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2)\n    }\n\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    )\n  }\n\n  useEffect(() => {\n    const addPayPalScript = async () => {\n      const {data:clientId} = await axios.get('/api/config/paypal')\n      //console.log(clientId)\n      const script = document.createElement('script')\n      script.type = 'text/javascript'\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n      //script from paypal sdk script\n      script.async = true\n      script.onload = () => {\n        setSdkReady(true)\n      }\n      document.body.appendChild(script)\n    }\n    if(!order || successPay){\n      dispatch({\n        type: ORDER_PAY_RESET\n      })\n      dispatch(getOrderDetails(orderId))\n    }else if(!order.isPaid){\n      if(!window.paypal){\n        addPayPalScript()\n      }else{\n        setSdkReady(true)\n      }\n    }\n    \n  }, [dispatch,orderId, successPay, order])\n\n  const successPaymentHandler = (paymentResult) => {\n    console.log(paymentResult)\n    //paymentResult show all data from paypal\n    dispatch(payOrder(orderId,paymentResult))\n  }\n\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <>\n      <h1>Order {order._id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Name: </strong> {order.user.name}\n              </p>\n              <p>\n                <strong>Email: </strong>{' '}\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n              </p>\n              <p>\n                <strong>Address:</strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\n                {order.shippingAddress.postalCode},{' '}\n                {order.shippingAddress.country}\n              </p>\n              {order.isDelivered ? (\n                <Message variant='success'>\n                  Delivered on {order.deliveredAt}\n                </Message>\n              ) : (\n                <Message variant='danger'>Not Delivered</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant='success'>Paid on {order.paidAt}</Message>\n              ) : (\n                <Message variant='danger'>Not Paid</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.length === 0 ? (\n                <Message>Order is empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n                  {!sdkReady ? <Loader /> : <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} />}\n                </ListGroup.Item>\n              )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default OrderScreen;","/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/screens/UserListScreen.js",[],"/Users/arek/Desktop/Mern/traversy_proshop/proshop_repeat/frontend/src/screens/UserEditScreen.js",[],{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":1,"column":16,"nodeType":"172","messageId":"173","endLine":1,"endColumn":24},{"ruleId":"170","severity":1,"message":"174","line":5,"column":52,"nodeType":"172","messageId":"173","endLine":5,"endColumn":56},{"ruleId":"170","severity":1,"message":"175","line":9,"column":8,"nodeType":"172","messageId":"173","endLine":9,"endColumn":13},{"ruleId":"170","severity":1,"message":"171","line":1,"column":16,"nodeType":"172","messageId":"173","endLine":1,"endColumn":24},{"ruleId":"170","severity":1,"message":"176","line":1,"column":26,"nodeType":"172","messageId":"173","endLine":1,"endColumn":35},{"ruleId":"170","severity":1,"message":"177","line":3,"column":10,"nodeType":"172","messageId":"173","endLine":3,"endColumn":23},{"ruleId":"170","severity":1,"message":"177","line":3,"column":10,"nodeType":"172","messageId":"173","endLine":3,"endColumn":23},{"ruleId":"170","severity":1,"message":"171","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":25},{"ruleId":"178","severity":1,"message":"179","line":34,"column":6,"nodeType":"180","endLine":34,"endColumn":24,"suggestions":"181"},{"ruleId":"170","severity":1,"message":"182","line":5,"column":10,"nodeType":"172","messageId":"173","endLine":5,"endColumn":16},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'axios' is defined but never used.","'useEffect' is defined but never used.","'LinkContainer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.","ArrayExpression",["185"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},"Update the dependencies array to be: [history, order._id, success]",{"range":"188","text":"189"},[1183,1201],"[history, order._id, success]"]